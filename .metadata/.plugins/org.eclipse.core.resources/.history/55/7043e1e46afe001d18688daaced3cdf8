package model;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class ConcesiorarioUQ implements Serializable{

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;
	private String nombre;
	private List<Cliente> listaClientes = new ArrayList<>();
	private List<Vehiculo> listaVehiculos = new ArrayList<>();
	private List<Empleado> listaEmpleados = new ArrayList<>();
	private List<Administrador> listaAdministradores = new ArrayList<>();

	public ConcesiorarioUQ() {
		super();
	}

	public ConcesiorarioUQ(String nombre, List<Cliente> listaClientes, List<Vehiculo> listaVehiculos, List<Empleado> listaEmpleados, List<Administrador> listaAdministradores) {
		super();
		this.nombre = nombre;
		this.listaClientes = listaClientes;
		this.listaVehiculos = listaVehiculos;
		this.listaEmpleados = listaEmpleados;
		this.setListaAdministradores(listaAdministradores);

	}

	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	public List<Cliente> getListaClientes() {
		return listaClientes;
	}

	public void setListaClientes(List<Cliente> listaClientes) {
		this.listaClientes = listaClientes;
	}

	public List<Vehiculo> getListaVehiculos() {
		return listaVehiculos;
	}

	public void setListaVehiculos(List<Vehiculo> listaVehiculos) {
		this.listaVehiculos = listaVehiculos;
	}

	public List<Empleado> getListaEmpleados() {
		return listaEmpleados;
	}

	public void setListaEmpleados(List<Empleado> listaEmpleados) {
		this.listaEmpleados = listaEmpleados;
	}

	public List<Administrador> getListaAdministradores() {
		return listaAdministradores;
	}

	public void setListaAdministradores(List<Administrador> listaAdministradores) {
		this.listaAdministradores = listaAdministradores;
	}

	/**
	 * Recibe los parametros para crear un cliente
	 * @param nombre
	 * @param apellido
	 * @param identificacion
	 * @return
	 */
	public boolean crearCliente(String nombre, String apellido, String identificacion, LocalDate fechaNacimiento){
		boolean flag = false;
		if(!verificarCliente(identificacion)){
			Cliente cliente = new Cliente(nombre, apellido, identificacion, fechaNacimiento);
			listaClientes.add(cliente);
			flag = true;
		}
		return flag;
	}

	/**
	 * Vefirica si el cliente existe
	 * @param identificacion
	 * @return retorna true si existe, false lo contrario.
	 */
	public boolean verificarCliente(String identificacion){
		boolean flag = false;
		for (Cliente cliente : listaClientes) {
			if(cliente.getIdentificacion().equals(identificacion)){
				flag = true;
			}
		}
		return flag;
	}



	public boolean eliminarCliente(Cliente clienteSeleccion) {

		for (Cliente cliente : listaClientes) {
			if(cliente.getIdentificacion().equals(clienteSeleccion.getIdentificacion())){
				listaClientes.remove(cliente);
				return true;
			}

		}
		return false;
	}

	public boolean crearVehiculo(Vehiculo coche) {

		for (Vehiculo vehiculo : listaVehiculos) {
			if(vehiculo.equals(coche)){
				return false;
			}
		}
		listaVehiculos.add(coche);
		return true;
	}

	public boolean crearEmpleado(Empleado empleado) {

		for (Empleado emple: listaEmpleados) {
			if(emple.equals(empleado)){
				return false;
			}
		}
		listaEmpleados.add(empleado);
		return false;
	}

	public boolean eliminarEmpleado(Empleado empleadoSeleccion) {
		for (Empleado empleado: listaEmpleados){
			if(empleado.equals(empleadoSeleccion)){
				return true;
			}

		}
		return false;
	}

	public  void crearAdmin(Administrador admin) {
		for (Administrador admin1 : getListaAdministradores()) {


		}
	}

	public boolean verificarAdmin(String password) {
		for (Administrador administrador : listaAdministradores) {
			if(administrador.getCredencial().equals(password)){
				return true;
			}
		}
		return false;
	}









}
